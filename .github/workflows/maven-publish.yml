# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      artifact_name: jpt

    steps:
    - uses: actions/checkout@v2

    - name: Get the release version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

    - name: Set up JDK 1.8 for deploy to OSSRH
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: ossrh 
        server-username: MAVEN_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Update package version
      run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}

    - name: Publish to Apache Maven Central
      run: mvn deploy
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}		

    - name: Set up JDK 1.8 for deploy to github packages
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github 

    - name: Build with Maven
      run: mvn -B package --file pomgh.xml

    - name: Update package version
      run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

    - name: Get the upload URL for a release
      id: get
      uses: bruceadams/get-release@v1.2.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Release Asset jar
      id: upload-release-asset-jar 
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get.outputs.upload_url }} 
        asset_path: dist/${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}.jar
        asset_name: ${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}.jar
        asset_content_type: application/java-archive
        
    - name: Upload Release Asset sources
      id: upload-release-asset-src 
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get.outputs.upload_url }} 
        asset_path: dist/${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}-sources.jar
        asset_name: ${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}-sources.jar
        asset_content_type: application/java-archive
        
    - name: Upload Release Asset docs
      id: upload-release-asset-docs 
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get.outputs.upload_url }} 
        asset_path: dist/${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}-javadoc.jar
        asset_name: ${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}-javadoc.jar
        asset_content_type: application/java-archive
