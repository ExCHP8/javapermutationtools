<project name="JPT" default="all" basedir="..">
  <description>
  Build file for the Java Permutation Tools (JPT) API.
  </description>
  <!-- global properties for this build -->
  <property name="VERSION" value="2.0.1"/>
  <property name="JDKVERSION" value="1.8"/>
  <property name="junit" location="build/junit-4.12.jar"/>
  <property name="hamcrest" location="build/hamcrest-core-1.3.jar"/>
  <property name="src" location="src"/>
  <property name="bin" location="bin"/>
  <property name="testsrc" location="tests"/>
  <property name="testbin" location="testbin"/>
  <property name="dist" location="dist"/>
  <property name="examples" location="examples"/>
  <property name="replication" location="replication"/>
  <property name="examplebin" location="exbin"/>
  <property name="docdir" location="docs/api"/>
  
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${bin}"/>
	<!-- Create the test directory structure-->
	<mkdir dir="${testbin}"/>
	<!-- Create the test directory structure-->
	<mkdir dir="${docdir}"/>
  </target>
  
  <target name="compile" depends="init"
        description="compile the source">
    <!-- Compile the Java code from ${src} into ${bin} -->
    <javac srcdir="${src}" destdir="${bin}" includeantruntime="false" 
		source="${JDKVERSION}" target="${JDKVERSION}">
	<!--
	   <compilerarg value="-Xlint:unchecked"/>
	-->
	<compilerarg value="-Xlint:deprecation"/>
	</javac>
	<!-- Compile the JUnit tests from ${testsrc} into ${testbin} -->
	<javac srcdir="${testsrc}" destdir="${testbin}" classpath="${junit};${bin}" 
		includeantruntime="false" source="${JDKVERSION}" target="${JDKVERSION}"/>	
  </target>
  
  <target name="test" depends="compile"
        description="execute JUnit tests">
	<junit haltonfailure="on">
	  <formatter type="plain" usefile="false"/>
	    <classpath>
          <pathelement location="${junit}"/>
		  <pathelement location="${hamcrest}"/>
          <pathelement location="${bin}"/>
          <pathelement location="${testbin}"/>
	    </classpath>
		<batchtest>
          <fileset dir="${testbin}">
            <include name="**/*.class"/>
			<exclude name="**/*$*"/>
          </fileset>
        </batchtest>
	</junit>
  </target>
  
  <target name="dist" depends="compile,test"
        description="generate the distribution">
	<!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
    <!-- Put everything in ${bin} into the jpt${VERSION}.jar file -->
    <jar jarfile="${dist}/jpt-${VERSION}.jar" basedir="${bin}"/>
  </target>
  
  <target name="examples" depends="dist"
		description="compiles example programs and experiment replication programs">
	<!-- Create directory for bin of examples and replication programs -->
    <mkdir dir="${examplebin}"/>
	<!-- Compile basic examples -->
	<javac srcdir="${examples}" destdir="${examplebin}"
		classpath="${dist}/jpt-${VERSION}.jar;${examples}" includeantruntime="false" 
		source="${JDKVERSION}" target="${JDKVERSION}"/>
	<!-- Compile experiment replication programs -->
	<javac srcdir="${replication}" destdir="${examplebin}"
		classpath="${dist}/jpt-${VERSION}.jar;${replication}" includeantruntime="false" 
		source="${JDKVERSION}" target="${JDKVERSION}"/>
  </target>
  
  <target name="docs" depends="dist" 
		description="generates documentation via javadoc">
	<javadoc destdir="${docdir}"
			sourcepath="${src}"
			windowtitle="JavaPermutationTools - A Java API for computation on permutations"
			doctitle="JavaPermutationTools - A Java API for computation on permutations"
			overview="src/overview.html"
			author="false"
			version="false"
			additionalparam="-notimestamp --no-module-directories"
			source="${JDKVERSION}">
		<link href="https://docs.oracle.com/javase/8/docs/api/" packagelistLoc="build/java-package-list" offline="true" />
		<bottom><![CDATA[Copyright &copy; 2005-2019 Vincent A. Cicirello. <a href=\"https://www.cicirello.org/\" target=_top>https://www.cicirello.org/</a>]]></bottom>
	</javadoc>
  </target>
  
  <target name="all" depends="dist,examples,docs" description="compile everything including example programs and generates library jar">
  </target>
  
  <target name="clean"
        description="clean up">
    <!-- Delete the ${bin} and ${dist} directory trees -->
    <delete dir="${bin}"/>
	<delete dir="${testbin}"/>
	<delete dir="${examplebin}"/>
	<delete dir="${docdir}"/>
  </target>

</project>